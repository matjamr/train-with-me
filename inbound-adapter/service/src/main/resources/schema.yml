openapi: 3.0.0
info:
  title: Basic api test
  version: '1'
servers:
  - url: http://localhost:8080
paths:
  /training:
    get:
      summary: List all trainings
      operationId: getTrainings
      tags:
        - trainings
      parameters:
        - name: limit
          in: query
          description: 'How many items to return at one time (max 100)'
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of trainings
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Training"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /training/{id}:
    get:
      summary: Info for a specific training
      operationId: getTrainingById
      tags:
        - training
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the training to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Training"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /training/{id}/rating:
    get:
      summary: Info for a specific training and its rating
      operationId: getRatingsForTraining
      tags:
        - ratingForTraining
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the training to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rating"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
        password:
          type: string
        createdAt:
          type: integer
        role:
          $ref: '#/components/schemas/Role'
    Role:
      type: string

    Users:
      type: array
      items:
        $ref: '#/components/schemas/User'

    Training:
      type: object
      properties:
        overallRating:
          type: string
        trainingLevel:
          type: string
        description:
          type: string
        title:
          type: string
        imageUrl:
          type: string
        createdBy:
          $ref: "#/components/schemas/User"

    Rating:
      type: object
      properties:
        title:
          type: string
        stars:
          type: string
        createdBy:
          $ref: "#/components/schemas/User"
        training:
          $ref: "#/components/schemas/Training"

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string